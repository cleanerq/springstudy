<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.dao, com.service, com.bean"></context:component-scan>
    <context:property-placeholder location="classpath:/conf/dbconfig.properties"></context:property-placeholder>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
    </bean>

    <bean id="dataSourceA" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="driverClassName" value="${jdbc.driverClass}"></property>
    </bean>

    <bean id="dataSourceB" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="url" value="${jdbc.url.book}"></property>
        <property name="driverClassName" value="${jdbc.driverClass}"></property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg name="dataSource" ref="dataSourceA"></constructor-arg>
    </bean>

    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg name="dataSource" ref="dataSourceA"></constructor-arg>
    </bean>


    <bean id="jdbcTemplateB" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg name="dataSource" ref="dataSourceB"></constructor-arg>
    </bean>

    <bean id="namedParameterJdbcTemplateB" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg name="dataSource" ref="dataSourceB"></constructor-arg>
    </bean>


    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--        控制数据源-->
        <constructor-arg name="dataSource" ref="dataSourceB"></constructor-arg>
    </bean>
    <!--    开启基于注解的事物控制模式-->
<!--    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"></tx:annotation-driven>-->

    <!--基于XML配置的事务-->
    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* com.service.*Xml.*(..))"/>
        <!--事务建议 事务增强 advice-ref 指向事务管理器的配置 -->
        <aop:advisor advice-ref="myAdvice" pointcut-ref="pointcut"></aop:advisor>
    </aop:config>

    <!--配置事务管理器-->
    <tx:advice id="myAdvice" transaction-manager="dataSourceTransactionManager">
        <!--事务属性-->
        <tx:attributes>
            <!-- 指明哪些方法是事务方法，切入点表达式只是说，事务管理器切入这些方法，哪些方法要加事务需要tx:method方法指定-->
            <tx:method name="*" propagation="REQUIRED"/>
            <tx:method name="checkout" propagation="REQUIRED"></tx:method>

        </tx:attributes>
    </tx:advice>


</beans>